# 🧵 Fluxo de Trabalho com Git (Git Flow Simplificado)

📌 Branches principais:
- `main`     → Código em produção (sempre estável e versionado com tag ex: v1.0.0)
- `develop`  → Desenvolvimento ativo

📌 Branches temporárias:
- `feature/NOME`  → Para novas funcionalidades
- `hotfix/NOME`   → Para correções urgentes
- `release/X.X.X` → (opcional) Para preparar uma versão

===========================
✅ Como começar um projeto
===========================

# Cria e sobe develop a partir da main
git checkout main
git checkout -b develop
git push -u origin develop

===============================
✨ Criando uma nova funcionalidade
===============================

# A partir de develop
git checkout develop
git checkout -b feature/nome-da-feature

# Trabalhe no código...

git add .
git commit -m "feat: adiciona nome-da-feature"
git checkout develop
git merge feature/nome-da-feature
git branch -d feature/nome-da-feature
git push

=================================
🐞 Criando uma correção urgente
=================================

# A partir de main (versão estável)
git checkout main
git checkout -b hotfix/descricao-do-bug

# Faça a correção...

git add .
git commit -m "fix: corrige descricao-do-bug"

# Mescla no main e cria nova tag de versão
git checkout main
git merge hotfix/descricao-do-bug
git tag -a v1.0.1 -m "Hotfix: correcao urgente"
git push origin main --tags

# Leva também para develop
git checkout develop
git merge hotfix/descricao-do-bug
git push

================================
🚀 Preparando nova release
================================

# Cria branch release (opcional)
git checkout develop
git checkout -b release/v1.1.0

# Testes finais, ajustes pequenos...

git checkout main
git merge release/v1.1.0
git tag -a v1.1.0 -m "Release 1.1.0"
git push origin main --tags

# Depois: leva mudanças para develop também
git checkout develop
git merge release/v1.1.0
git push
